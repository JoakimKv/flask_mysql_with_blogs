"""step3

Revision ID: 87c3441b8c45
Revises: 30b6d27154b5
Create Date: 2021-05-28 14:29:14.903910

"""

# revision identifiers, used by Alembic.
revision = '87c3441b8c45'
down_revision = '30b6d27154b5'
branch_labels = None
depends_on = None


from uuid import uuid4
from alembic import op
import sqlalchemy as sa



Base = sa.orm.declarative_base()

class User(Base):
    
    __tablename__ = 'user'

    id = sa.Column(sa.Integer, primary_key=True)
    uuid = sa.Column(sa.String(64), nullable=False, default=lambda: str(uuid4()))
    username = sa.Column(sa.String(150), nullable=False, unique=True)
    password = sa.Column(sa.String(255), nullable=False)

def upgrade():
    
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col['name'] for col in inspector.get_columns('user')]
    
    if 'uuid' not in columns:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.add_column(sa.Column('uuid', sa.String(length=64), nullable=True))

    session = sa.orm.Session(bind=conn)
    for user in session.query(User).all():
        user.uuid = str(uuid4())
        session.add(user)
    session.commit()

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column(
            'uuid',
            existing_type=sa.String(length=64),  # specify existing type
            nullable=False
        )

def downgrade():
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('uuid')

    # ### end Alembic commands ###
